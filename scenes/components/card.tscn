[gd_scene load_steps=7 format=3 uid="uid://blccbtjlg4gp4"]

[ext_resource type="Script" path="res://src/Card.gd" id="1_6n710"]
[ext_resource type="Texture2D" uid="uid://byo2da6hvohdg" path="res://Pixel Playing Cards Pack/ace_hearts_white.png" id="2_nl4a8"]

[sub_resource type="Animation" id="Animation_siomg"]
resource_name = "Flip"
length = 0.2
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(0, 1), Vector2(1, 1)]
}
tracks/1/type = "method"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0.1),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"switch_texture"
}]
}

[sub_resource type="Animation" id="Animation_evt0r"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1, 1)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_xmq3b"]
_data = {
"Flip": SubResource("Animation_siomg"),
"RESET": SubResource("Animation_evt0r")
}

[sub_resource type="RectangleShape2D" id="RectangleShape2D_g5m38"]
size = Vector2(60, 84)

[node name="Card" type="Area2D"]
position = Vector2(237, 138)
script = ExtResource("1_6n710")
face_tex = ExtResource("2_nl4a8")

[node name="Face" type="Sprite2D" parent="."]
texture = ExtResource("2_nl4a8")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_xmq3b")
}

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("RectangleShape2D_g5m38")

[connection signal="input_event" from="." to="." method="_on_input_event"]
[connection signal="mouse_entered" from="." to="." method="_on_mouse_entered"]
